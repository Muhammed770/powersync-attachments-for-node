import Logger, { type ILogger, type ILogLevel } from 'js-logger';
export { GlobalLogger, ILogger, ILoggerOpts, ILogHandler, ILogLevel } from 'js-logger';
export declare const LogLevel: {
    TRACE: Logger.ILogLevel;
    DEBUG: Logger.ILogLevel;
    INFO: Logger.ILogLevel;
    TIME: Logger.ILogLevel;
    WARN: Logger.ILogLevel;
    ERROR: Logger.ILogLevel;
    OFF: Logger.ILogLevel;
};
export interface CreateLoggerOptions {
    logLevel?: ILogLevel;
}
/**
 * Retrieves the base (default) logger instance.
 *
 * This base logger controls the default logging configuration and is shared
 * across all loggers created with `createLogger`. Adjusting settings on this
 * base logger affects all loggers derived from it unless explicitly overridden.
 *
 */
export declare function createBaseLogger(): typeof Logger;
/**
 * Creates and configures a new named logger based on the base logger.
 *
 * Named loggers allow specific modules or areas of your application to have
 * their own logging levels and behaviors. These loggers inherit configuration
 * from the base logger by default but can override settings independently.
 */
export declare function createLogger(name: string, options?: CreateLoggerOptions): ILogger;
